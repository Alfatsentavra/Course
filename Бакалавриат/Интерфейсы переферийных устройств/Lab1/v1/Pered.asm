.MODEL SMALL
.STACK 100h
.DATA
.CODE
START:
	mov ax,80h
	mov dx, 3fbh
	out dx,al
	mov ax,0Ch  ; Заносим младший байт скорости 9600 bit\s
	;mov ax,01h  ; Заносим младший байт скорости 115200 bit\s
	mov dx,3F8h ; Заносим в dx адрес регистра 3f8h
	out dx,al   ; Передаем байт по заданному адресу
	mov al,0    ; Заносим старший байт скорости
	mov dx,3F9h ; Заносим в dx адрес регистра 3f9h
	out dx,al   ; Передаем байт по заданному адресу
	mov ax,3Bh  ; Передаем байт настройки(8 бит данных,бит паритета 		отсутствует,DLab=0,1 стоп-бит)
	mov dx,3FBh ; Заносим в dx адрес регистра управления линией 3fbh
	out dx,al   ; Передаем байт по заданному адресу
waitread:
	mov ah,01h
	int 21h
	mov dx,3F8h  		; Заносим в регистр dx адрес 3f8h
	out dx,al			; Пишем байт
stop:
	cmp al, 1Bh
	jne check
	mov ah, 4ch
	int 21h
check:
	mov dx, 3FDh 		; Заносим в DX адрес регистра статуса
	in  al, dx   		; читаем из регистра статуса 
	and al, 00100000b	; Делаем побитовое и для 5-го бита регистра
	cmp al, 00100000b	; Сравниваем младший бит в регистре с единицей
	je waitread			; Если младший бит равен 1, то ждем следующий символ
	jmp check			; Иначе ждем, пока отправится предыдущий
END START




