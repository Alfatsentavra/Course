// 1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <math.h>
#include <conio.h>
#include <iostream>
#include <stdio.h>
#include <iomanip>

using namespace std;





double x[100];

double fx(double x)
{
	return exp(x);
}

int main()
{
	
	setlocale(LC_ALL, "Russian");
	int i, k, n; 
	double Ln = 0.0, Pni, a, b, xt, tk, gr;
	double pi = 3.14159265358979323846;
	cout << "Введите значение тестовой точки xt : ";
	cin >> xt;
	cout << "Введите значения концов отрезка a,b : ";
	cin >> a >> b;
	cout << "Введите количество точек n : ";
	cin >> n;
	for (i = 0; i <= n; i++)
	{
		tk = cos(((2 * i + 1) * pi) / (2 * (n + 1)));
		x[i] = (((b - a) * tk + (a + b)) / 2);
	}
	for (i = 0; i <= n; i++)
	{
		Pni = 1.0;
		for (k = 0; k <= n; k++)
		{
			if (k == i)
				continue;
			else
			{
				Pni *= (xt - x[k]) / (x[i] - x[k]);
			}
		}
		Ln += Pni * fx(x[i]);		//Расчёт ИМЛ
	}
	gr = fabs(fx(xt) - Ln);
	cout << "Интерполяционный многочлен Лагранжа Ln = " << setprecision(20) << Ln << endl;
	cout << "Значение функции exp = " << fx(xt) << endl;
	cout << "Погрешность = " << gr << endl;
	_getch();
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
